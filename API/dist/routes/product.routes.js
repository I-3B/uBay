"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const passport = require("passport");
const auth_middleware_1 = require("@middlewares/auth.middleware");
const comment_routes_1 = require("@routes/comment.routes");
const product_controller_1 = require("@controllers/product.controller");
const uploadingImage_1 = require("@middlewares/uploadingImage");
const validateResource_1 = require("@middlewares/validateResource");
const product_schema_1 = require("../schema/product.schema");
const helper_middleware_1 = require("@middlewares/helper.middleware");
const coupon_routes_1 = require("@routes/coupon.routes");
const router = (0, express_1.Router)({ mergeParams: true });
router.use('/:productId/comments/', comment_routes_1.default);
router.use('/:productId/coupons/', coupon_routes_1.default);
router.use(passport.authenticate('jwt', { session: false, failWithError: true }));
router.get('/', product_controller_1.getAllPros);
router.get('/mine', product_controller_1.myProduct);
router.get('/:id', product_controller_1.getProduct, product_controller_1.filterCoupon);
router.post('/', (0, auth_middleware_1.restrictTo)('user'), uploadingImage_1.uploadProductPhotos, uploadingImage_1.resizeProductPhotos, (0, helper_middleware_1.setIds)(), (0, validateResource_1.default)(product_schema_1.productSchema), product_controller_1.createProduct);
router.post('/:id/likes', (0, auth_middleware_1.restrictTo)('user'), product_controller_1.like);
router.delete('/:id/likes', (0, auth_middleware_1.restrictTo)('user'), product_controller_1.dislike);
router.patch('/:id', product_controller_1.checkIsOwnerProduct, uploadingImage_1.uploadProductPhotos, uploadingImage_1.resizeProductPhotos, product_controller_1.checkProductIsPaid, product_controller_1.updateProduct);
router.delete('/:id', product_controller_1.checkIsOwnerProduct, product_controller_1.deleteProduct);
exports.default = router;
//# sourceMappingURL=product.routes.js.map